name: Deploy kcli-openshift4-baremetal instances on KVM Internally
on:
  workflow_dispatch:
    inputs:
      deployment_config:
        description: 'Supported Deployment Configurations'
        required: true
        default: 'cnv-kcli-openshift4-baremetal.yml'
        type: choice
        options:
          - cnv-kcli-openshift4-baremetal.yml
          - convereged-kcli-openshift4-baremetal.yml
          - kcli-openshift4-baremetal.yml
      target_server:
        description: 'target_server'
        required: true
        default: rhel9-equinix
      vm_name:
        description:  'VM Deployment'
        required: true
        default: kcli-openshift4-baremetal
      action:
        description: 'action'
        required: true
        default: create
        type: choice
        options:
          - create
          - delete
      deploy_openshift:
        description: 'Deploy The OpenShit Cluster on Launch'
        required: true
        default: true
        type: choice
        options:
          - true
          - false
      auto_launch_steps:
        description: 'Auto deploy Steps'
        required: true
        default: true
        type: choice
        options:
          - true
          - false
      deployment_tag:
        description: 'OpenShift Version'
        required: true
        default: '4.17'
        type: choice
        options:
          - '4.15'
          - '4.16'
          - '4.17'
      disconnected_install:
        description: 'Enable Disconnected Install'
        required: true
        default: false
        type: choice
        options:
          - true
          - false
      community_version:
        description: 'Use community version of software (true/false)'
        required: true
        default: 'false'
        type: choice
        options:
          - true
          - false
      runner:
        description: 'Runner'
        required: true
        default: 'self-hosted'
env:
    TARGET_SERVER: ${{ inputs.target_server }}
    VM_NAME: ${{ inputs.vm_name }}
    ACTION: ${{ inputs.action }}
    DEPLOY_OPENSHIFT: ${{ inputs.deploy_openshift }}
    LAUNCH_STEPS: ${{ inputs.auto_launch_steps }}
    TAG: ${{ inputs.deployment_tag }}
    DISCONNECTED_INSTALL: ${{ inputs.disconnected_install }}
    DEPLOYMENT_CONFIG: ${{ inputs.deployment_config }}
    COMMUNITY_VERSION: ${{ inputs.community_version }}
    DEFAULT_RUNNER_USER: "runner"

jobs:
  configure-kcli-profiles:
    runs-on: self-hosted # Use the runner name at the job level
    timeout-minutes: 30
    if: ${{ inputs.runner == 'self-hosted' }}
    steps:
      - uses: actions/checkout@v3

      - name: Check permissions
        run: |
          if [ -d "/home/${{ env.DEFAULT_RUNNER_USER }}/kcli-pipelines" ]; then
            ls -la /home/${{ env.DEFAULT_RUNNER_USER }}/kcli-pipelines/.git
            sudo chown -R ${{ env.DEFAULT_RUNNER_USER }}:${{ env.DEFAULT_RUNNER_USER }} /home/${{ env.DEFAULT_RUNNER_USER }}/kcli-pipelines
          fi

      - name: Configure kcli profiles
        run: | 
          export TARGET_SERVER=${{ env.TARGET_SERVER }}
          export VM_PROFILE=${{ env.VM_NAME }}
          if [ "${{ inputs.vm_name }}" != "freeipa" ]; then
            export CUSTOM_PROFILE=false
          else 
            export CUSTOM_PROFILE=true
          fi
          if [ -d "/home/${{ env.DEFAULT_RUNNER_USER }}/kcli-pipelines" ]; then
            cd /home/${{ env.DEFAULT_RUNNER_USER }}/kcli-pipelines
            git config pull.rebase false
            git pull
          else
            cd /home/${{ env.DEFAULT_RUNNER_USER }}/
            git clone https://github.com/tosin2013/kcli-pipelines.git
          fi
          sudo chown -R ${{ env.DEFAULT_RUNNER_USER }}:${{ env.DEFAULT_RUNNER_USER }} /home/${{ env.DEFAULT_RUNNER_USER }}/kcli-pipelines
          /home/${{ env.DEFAULT_RUNNER_USER }}/kcli-pipelines/configure-kcli-profiles.sh || exit $?

  kcli-openshift4-baremetal:
    runs-on: self-hosted # Use the runner name at the job level
    timeout-minutes: 120
    needs: configure-kcli-profiles # Ensure the previous job runs first
    if: ${{ inputs.runner == 'self-hosted' }}
    steps:
      - uses: actions/checkout@v3

      - name: Deploying OpenShift 4 Baremetal on KVM
        run: | 
          if [ -d "/home/${{ env.DEFAULT_RUNNER_USER }}/kcli-pipelines" ]; then
            cd /home/${{ env.DEFAULT_RUNNER_USER }}/kcli-pipelines
            git config pull.rebase false
            git pull
          else
            cd /home/${{ env.DEFAULT_RUNNER_USER }}
            git clone https://github.com/tosin2013/kcli-pipelines.git
          fi
          export TARGET_SERVER=${{ env.TARGET_SERVER }}
          export INVENTORY=${{ env.TARGET_SERVER }}
          export VM_NAME=${{ env.VM_NAME }}
          export VM_PROFILE=${{ env.VM_NAME }}
          export ACTION=${{ env.ACTION }}
          export DEPLOY_OPENSHIFT=${{ env.DEPLOY_OPENSHIFT }}
          export LAUNCH_STEPS=${{ env.LAUNCH_STEPS }}
          export TAG=${{ env.TAG }}
          export DISCONNECTED_INSTALL=${{ env.DISCONNECTED_INSTALL }}
          export DEPLOYMENT_CONFIG=${{ env.DEPLOYMENT_CONFIG }}
          export COMMUNITY_VERSION=${{ env.COMMUNITY_VERSION }}
          export DEFAULT_RUNNER_USER=${{ env.DEFAULT_RUNNER_USER }}
          /home/${{ env.DEFAULT_RUNNER_USER }}/kcli-pipelines/deploy-vm.sh

  deploy-dns:
    runs-on: self-hosted # Use the runner name at the job level
    timeout-minutes: 45
    needs: kcli-openshift4-baremetal # Ensure the previous job runs first
    if: ${{ inputs.runner == 'self-hosted' }}
    steps:
      - uses: actions/checkout@v3

      - name: Deploying ${{ inputs.vm_name }} on KVM
        run: | 
          if [ -d "/home/${{ env.DEFAULT_RUNNER_USER }}/kcli-pipelines" ]; then
            cd /home/${{ env.DEFAULT_RUNNER_USER }}/kcli-pipelines
            git config pull.rebase false
            git pull
          else
            cd /home/${{ env.DEFAULT_RUNNER_USER }}
            git clone https://github.com/tosin2013/kcli-pipelines.git
          fi
          export TARGET_SERVER=${{ env.TARGET_SERVER }}
          export VM_NAME=${{ env.VM_NAME }}
          export VM_PROFILE=${{ env.VM_NAME }}
          export ACTION=${{ env.ACTION }}
          if [ "${{ inputs.vm_name }}" != "freeipa" ] && [ "${{ inputs.custom_vm_name }}" != "" ]; then
            export VM_NAME=${{ inputs.custom_vm_name }}
          fi
          /home/${{ env.DEFAULT_RUNNER_USER }}/kcli-pipelines/deploy-vm.sh

  configure-dns:
    runs-on: self-hosted # Use the runner name at the job level
    timeout-minutes: 45
    needs: deploy-dns # Ensure the previous job runs first
    if: ${{ inputs.runner == 'self-hosted' }}
    steps:
      - uses: actions/checkout@v3

      - name: Deploying ${{ inputs.vm_name }} on KVM
        run: | 
          if [ -d "/home/${{ env.DEFAULT_RUNNER_USER }}/kcli-pipelines" ]; then
            cd /home/${{ env.DEFAULT_RUNNER_USER }}/kcli-pipelines
            git config pull.rebase false
            git pull
          else
            cd /home/${{ env.DEFAULT_RUNNER_USER }}
            git clone https://github.com/tosin2013/kcli-pipelines.git
          fi
          export TARGET_SERVER=${{ env.TARGET_SERVER }}
          export VM_NAME=${{ env.VM_NAME }}
          export VM_PROFILE=${{ env.VM_NAME }}
          export ACTION=${{ env.ACTION }}
          if [ "${{ inputs.vm_name }}" != "freeipa" ] && [ "${{ inputs.custom_vm_name }}" != "" ]; then
            export VM_NAME=${{ inputs.custom_vm_name }}
          fi
          if [ ${{ env.ACTION }} == "create" ];
          then 
            cd /home/${{ env.DEFAULT_RUNNER_USER }}/
            ./kcli-openshift4-baremetal/configure_dns_entries.sh
          fi